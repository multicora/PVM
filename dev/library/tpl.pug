.library-wrapper(
  md-swipe-left="vm.changeTab(1)"
  md-swipe-right="vm.changeTab(-1)")
  app-header
    .navigation
      //- .navigation-bar-container
      //-   ul.navigation-bar
      //-     li.tub(
      //-       ng-class="vm.videosClass"
      //-       ng-click="vm.tabBtnVideosClick()") videos
      //-     li.tub(
      //-       ng-class="vm.templatesClass"
      //-       ng-click="vm.tabBtnTemplatesClick()") templates
      //-     li.tub(
      //-       ng-class="vm.conversationsClass"
      //-       ng-click="vm.tabBtnConversationsClick()") conversations
      //-     //- li ANALYTICS
      //-     //- li CONTACTS
  md-content.library-content
    md-tabs(
      md-dynamic-height=""
      md-border-bottom=""
      md-selected="vm.selectedIndex"
      md-center-tabs="true")

      //- TODO: handlers
      md-tab(label='videos')
        md-content.md-padding.tubs-content(
          md-selected="vm.selectedIndex")
          video-list(
            list="vm.videosList"
            on-upload-click="vm.uploadBtnClick()"
            on-record-click="vm.recordBtnClick()"
            show-send-button="vm.showSendButton"
            on-thumbnail-click="vm.showPreview($data)"
            on-send-click="vm.sendClickHandler($data)")

      //- Templates
      md-tab(label='templates')
        md-content.md-padding.tubs-content(
          md-selected="vm.selectedIndex")
          template-list(
            list="vm.templatesList"
            on-use-click="vm.useTemplate($data)"
            on-delete="vm.deleteTemplate($data, $event)")

      md-tab(label='conversations')
        md-content.md-padding.tubs-content(
          md-selected="vm.selectedIndex")
          conversation-list(
            list="vm.conversationsList"
            on-indicator-click="vm.stopPropagation($event)"
            on-view-click="vm.viewConversation($data)")

  //- Video record & upload fab button
  video-fab-buttons(
    upload-btn-click="vm.uploadBtnClick()"
    record-btn-click="vm.recordBtnClick()")

  //- Record popup
  popup(
    ng-if="vm.showRecordPopup"
    close-popup="vm.closeRecordPopup()")
    .video-record-container
      form.recordForm
        p.popupTitle Record your video
        .record-video
          record-video(finish="vm.finishRecord($data)")
        .videoNameContainer
          input(
            type="text"
            ng-model="vm.videoName"
            placeholder="Enter video name")
        p.error(ng-if="vm.errorMessage") Error: {{vm.errorMessage}}
        .button-container
          button.btn.mdl-button.mdl-js-button.mdl-button--raised.cancel(ng-click="vm.closeRecordPopup()") cancel
          button.btn.mdl-button.mdl-js-button.mdl-button--raised.save(
            ng-click="vm.sendRecordClick(vm.videoName)"
            ng-disabled="!vm.recordedData") save

  //- Upload popup
  uploadPopup(
    get-videos="vm.getVideos()"
    show-upload-popup="vm.showUploadPopup")

  //- Preview popup
  popup(
    ng-if="vm.showPreviewPopup"
    close-popup="vm.closePreviewPopup()")
    .video-preview-container
      p.title.ellipsis {{vm.previewVideo.attributes.name}}
      .video-container
        video.video-js.vjs-default-skin(
          vjs-video
          controls
          preload="auto"
          vjs-media="vm.previewVideoUrl")
      .button-container
        button.btn.mdl-button.mdl-js-button.mdl-button--raised.close(ng-click="vm.closePreviewPopup()") close
        button.btn.mdl-button.mdl-js-button.mdl-button--raised.send(ng-click="vm.sendClickHandler(vm.previewVideo)") send